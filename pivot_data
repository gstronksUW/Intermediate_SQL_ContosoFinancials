--This code shows the number of distinct customers per day for the year of 2023 / The count (distinct) function is utilized to ensure that each customer is counted once per day regardless of how many orders they had in that same day

select
  orderdate,
  count(distinct customerkey) total_customers
FROM
  sales
where
  orderdate between '2023-01-01' and '2023-12-31'
Group by
  orderdate
  ;


-- this code is counting the number of customers from each continent then using a "case when"statement to pivot the data in to new columns so that the customer counts are now tabulated horizontally in the table by continent / in order to do this the sales and customer tables were joined as well

select
  s.orderdate,
  count(distinct case when c.continent='Europe' then s.customerkey end) as eu_customers,
  count(distinct case when c.continent='North America' then s.customerkey end) as na_customers,
  count(distinct case when c.continent='Australia' then s.customerkey end) as au_customers 
FROM
  sales s
Left join customer c on s.customerkey = c.customerkey
where
 s.orderdate between '2023-01-01' and '2023-12-31'
Group by
  s.orderdate
Order by 
  s.orderdate 
  ;



--This code creates a table that shows the yearly net revenue for each product category using a case when statement to pivot the data in to columns for the yearly totals / This is done using the sum function and nesting the case when statement inside so that each year is separated in to its own column.

select
  p.categoryname,
  sum(case when s.orderdate between '2022-01-01' and '2022-12-31' then s.quantity*s.netprice*s.exchangerate else 0 end ) as total_netrevenue_2022,
  sum(case when s.orderdate between '2023-01-01' and '2023-12-31' then s.quantity*s.netprice*s.exchangerate else 0 end ) as total_netrevenue_2023
FROM
  sales s
  left join product p on s.productkey = p.productkey

Group by
  p.categoryname
Order by
  p.categoryname
  ;
