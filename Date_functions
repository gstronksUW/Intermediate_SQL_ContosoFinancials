-- interval between date functions - finding the time between two dates to find the duration




--date and time  analysis datetrunc


select
  orderdate,
  DATE_TRUNC('month', orderdate) :: date as order_month,

from
  sales
Order by
  Random ()
  limit 10;



--date and time  analysis datetrunc


select
  DATE_TRUNC('month', orderdate) :: date as order_month,
  sum(quantity * netprice * exchangerate) as net_revenue,
  count(distinct customerkey) as total_unique_customers
from
  sales
Group by
  order_month
;


-- to_char() example , change the selected expression to format of choice


select
  orderdate,
  to_char(orderdate, 'yyyy-MM')
from
  sales
order by
  random()
;




--date filtering date_part() and extract()
select
  date_part('year', orderdate) as order_year,
  date_part('month', orderdate) as order_month,
  date_part('day', orderdate) as order_day

from
  sales
order by
  random()
limit 10
;


-- Using extract insteand of date_part 
select
  orderdate,
  extract(year from orderdate) as order_year,
  extract(month from orderdate) as order_month,
  extract(day from orderdate) as order_day

from
  sales
order by
  random()
limit 10
;



-- dynamic filtering with current date or now()

select
  current_date,
  extract(YEAR from orderdate) as order_year,
  extract(YEAR from CURRENT_DATE) as current_year,
  extract(YEAR from CURRENT_DATE) - 5 as minus_five,
  s.orderdate,
  p.categoryname,
  sum(s.quantity*s.netprice*s.exchangerate) as net_revenue
FROM
  sales s
  left join product p on s.productkey = p.productkey

where
  extract(YEAR from orderdate) >= extract(YEAR from CURRENT_DATE) - 5
Group by
  s.orderdate,
  p.categoryname
Order by
  p.categoryname
  ;


-- Using the interval function to use as a set interval to compare the time between two dates

select
  current_date,
  s.orderdate
FROM
  sales s
  
where
  orderdate >= current_date - interval '5 years'


  ;




select
  current_date,
  extract(YEAR from orderdate) as order_year,
  extract(YEAR from CURRENT_DATE) as current_year,
  extract(YEAR from CURRENT_DATE) - 5 as minus_five,
  s.orderdate,
  p.categoryname,
  sum(s.quantity*s.netprice*s.exchangerate) as net_revenue
FROM
  sales s
  left join product p on s.productkey = p.productkey

where
  orderdate >= current_date - interval '5 years'
Group by
  s.orderdate,
  p.categoryname
Order by
  p.categoryname
  ;





-- age() function - this function finds the interval between two dates, the end date has to be the first one listed to get a sensical output

select extract(day from age('2024-01-14','2024-01-08'))-5




--average processing time by year 

select 
  date_part('year', orderdate) as order_year,
  round(avg(extract(days from age(deliverydate, orderdate))),2)as processing_time,
  cast(sum(quantity*netprice*exchangerate)as Integer )as net_revenue
from  
  Sales
where 
  orderdate >= current_date - interval '5 years'
group by
  order_year 
order by 
  order_year 
;




